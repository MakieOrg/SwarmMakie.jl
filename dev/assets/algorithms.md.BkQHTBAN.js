import{_ as e,c as a,o as i,a7 as r}from"./chunks/framework.CtKH--HK.js";const w=JSON.parse('{"title":"Algorithms","description":"","frontmatter":{},"headers":[],"relativePath":"algorithms.md","filePath":"algorithms.md","lastUpdated":null}'),o={name:"algorithms.md"},t=r('<h1 id="Algorithms" tabindex="-1">Algorithms <a class="header-anchor" href="#Algorithms" aria-label="Permalink to &quot;Algorithms {#Algorithms}&quot;">​</a></h1><p>SwarmMakie aims to offer several beeswarm algorithms, which give different results.</p><p>Currently, it offers the <a href="/SwarmMakie.jl/dev/api#SwarmMakie.SimpleBeeswarm"><code>SimpleBeeswarm</code></a> and <a href="/SwarmMakie.jl/dev/api#SwarmMakie.WilkinsonBeeswarm"><code>WilkinsonBeeswarm</code></a> algorithms, which is inspired by Matplotlib and Seaborn, and a no-op <a href="/SwarmMakie.jl/dev/api#SwarmMakie.NoBeeswarm"><code>NoBeeswarm</code></a> struct which simply decomposes back to the original scatter plot.</p><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="SwarmMakie.SimpleBeeswarm-algorithms" href="#SwarmMakie.SimpleBeeswarm-algorithms">#</a> <b><u>SwarmMakie.SimpleBeeswarm</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SimpleBeeswarm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p>A simple implementation like Matplotlib&#39;s algorithm. This is the default algorithm used in <code>beeswarm</code>.</p><p>This algorithm dodges in <code>x</code> but preserves the exact <code>y</code> coordinate of each point. If you don&#39;t want to preserve the y coordinate, check out <a href="/SwarmMakie.jl/dev/api#SwarmMakie.WilkinsonBeeswarm"><code>WilkinsonBeeswarm</code></a>.</p><p><a href="https://github.com/asinghvi17/SwarmMakie.jl/blob/84fd0301bc42fe6df21dc4c7cd259198cd84118d/src/algorithms/simple.jl#L9-L17" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="SwarmMakie.WilkinsonBeeswarm-algorithms" href="#SwarmMakie.WilkinsonBeeswarm-algorithms">#</a> <b><u>SwarmMakie.WilkinsonBeeswarm</u></b> — <i>Type</i>. <div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">WilkinsonBeeswarm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span></code></pre></div><p>A beeswarm algorithm that implements Leland Wilkinson&#39;s original dot-hist algorithm.</p><p>This is essentially a histogram with dots, where all dots are binned in the <code>y</code> (non-categorical) direction, and then dodged in the <code>x</code> (categorical) direction.</p><p>Original y-coordinates are not preserved, and if you want that try <a href="/SwarmMakie.jl/dev/api#SwarmMakie.SimpleBeeswarm"><code>SimpleBeeswarm</code></a> instead.</p><p><a href="https://github.com/asinghvi17/SwarmMakie.jl/blob/84fd0301bc42fe6df21dc4c7cd259198cd84118d/src/algorithms/wilkinson.jl#L18-L27" target="_blank" rel="noreferrer">source</a></p></div><br><div style="border-width:1px;border-style:solid;border-color:black;padding:1em;border-radius:25px;"><a id="SwarmMakie.NoBeeswarm-algorithms" href="#SwarmMakie.NoBeeswarm-algorithms">#</a> <b><u>SwarmMakie.NoBeeswarm</u></b> — <i>Type</i>. <p>A simple no-op algorithm, which causes the scatter plot to be drawn as if you called <code>scatter</code> and not <code>beeswarm</code>.</p><p><a href="https://github.com/asinghvi17/SwarmMakie.jl/blob/84fd0301bc42fe6df21dc4c7cd259198cd84118d/src/recipe.jl#L49" target="_blank" rel="noreferrer">source</a></p></div><br><p>Code exists for the algorithm suggested by Michael Borregaard in <a href="https://github.com/JuliaPlots/StatsPlots.jl/pull/61#issuecomment-328853342" target="_blank" rel="noreferrer">this StatsPlots.jl PR</a>, but it is currently nonfunctional. If you&#39;d like to take a crack at getting it working, please do!</p><p>We also welcome any new algorithms you may have in mind. Just open a PR!</p><h2 id="Adding-a-new-algorithm" tabindex="-1">Adding a new algorithm <a class="header-anchor" href="#Adding-a-new-algorithm" aria-label="Permalink to &quot;Adding a new algorithm {#Adding-a-new-algorithm}&quot;">​</a></h2><p>In order to add a new algorithm, you must simply define a <code>struct</code> which subtypes <code>SwarmMakie.BeeswarmAlgorithm</code>.</p><p>There must also be a corresponding dispatch on <code>SwarmMakie.calculate!(buffer, alg, positions, markersize)</code> which loads the new positions calculated in pixel space into <code>buffer</code>. Note that <code>buffer</code> <em>must</em> be modified here.</p><p>See the Wilkinson source page for a deep dive into how to write a beeswarm algorithm!</p>',15),s=[t];function l(d,n,c,h,m,p){return i(),a("div",null,s)}const b=e(o,[["render",l]]);export{w as __pageData,b as default};
